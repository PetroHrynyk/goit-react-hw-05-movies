{"version":3,"file":"static/js/992.de43b636.chunk.js","mappings":"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","sources":["Service/servise.js","webpack://goit-react-hw-05-movies/./src/components/Pages/SingleMoviePage/SingleMoviePage.module.css?260d","components/Pages/SingleMoviePage/SingleMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\nconst myKey = 'api_key=3ad61d03a4fee35a02b0181321c49002';\nconst trendMovies = '/trending/movie/day?';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getMovies = async () => {\n  const result = await instance.get(`${trendMovies}${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getSingleMovie = async id => {\n  const result = await instance.get(`/movie/${id}?${myKey}`);\n  const { data } = result;\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const result = await instance.get(`/search/movie?query=${query}&${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getActor = async id => {\n  const result = await instance.get(`/movie/${id}/credits?${myKey}`);\n  const { data } = result;\n  const { cast } = data;\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const result = await instance.get(`/movie/${id}/reviews?${myKey}&page=1`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"SingleMoviePage_section__3v85U\",\"info\":\"SingleMoviePage_info__z1jy7\",\"imgMovie\":\"SingleMoviePage_imgMovie__5T+wT\",\"btn\":\"SingleMoviePage_btn__LhSca\"};","import {\n  Link,\n  useParams,\n  useNavigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\nimport { getSingleMovie } from 'Service/servise';\nimport s from '../SingleMoviePage/SingleMoviePage.module.css';\n\nconst BASE_URL_PICTURE = 'https://image.tmdb.org/t/p/original';\n\nexport default function SingleMoviePage() {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/movies';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setState({\n        ...state,\n        loading: true,\n      });\n      try {\n        const result = await getSingleMovie(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: { ...prevState.item, ...result },\n          };\n        });\n      } catch (error) {\n        setState({\n          ...state,\n          error,\n        });\n      } finally {\n        setState(prevState => {\n          return { ...prevState, loading: false };\n        });\n      }\n    };\n    fetchMovies();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, setState]);\n\n  const { title, overview, genres, poster_path, vote_average } = state.item;\n//   console.log(poster_path);\n  return (\n    <>\n      <button className={s.btn} onClick={goBack}>\n        Go Back\n      </button>\n      <div className={s.section}>\n        <img\n          className={s.imgMovie}\n          src={`${BASE_URL_PICTURE}${poster_path}`}\n          alt={title}\n        />\n        <div className={s.info}>\n          <p>{title}</p>\n          <h2>User score:</h2>\n          <p>{vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres?.map(el => `${el.name}`)}</p>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <Link state={{ from }} to={`/movies/${id}/cast`}>\n        Cast\n      </Link>\n\n      <br />\n      <Link state={{ from }} to={`/movies/${id}/reviews`}>\n        Reviews\n      </Link>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["myKey","instance","axios","baseURL","getMovies","get","result","data","results","getSingleMovie","id","getSearchMovies","query","getActor","cast","getReviews","SingleMoviePage","useState","item","loading","error","state","setState","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovies","prevState","title","overview","genres","poster_path","vote_average","className","s","onClick","src","alt","map","el","name","to"],"sourceRoot":""}