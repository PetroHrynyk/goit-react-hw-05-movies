{"version":3,"file":"static/js/277.731cd573.chunk.js","mappings":"8SACMA,EAAQ,2CAGRC,EAAWC,EAAAA,GAAAA,OAAa,CAC5BC,QAAS,iCAGEC,EAAS,mCAAG,wGACFH,EAASI,IAAT,UAPH,wBAOG,OAA8BL,IAD5B,cACjBM,EADiB,OAEfC,EAASD,EAATC,KACAC,EAAYD,EAAZC,QAHe,kBAIhBA,GAJgB,2CAAH,qDAOTC,EAAc,mCAAG,WAAMC,GAAN,yFACPT,EAASI,IAAT,iBAAuBK,EAAvB,YAA6BV,IADtB,cACtBM,EADsB,OAEpBC,EAASD,EAATC,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdI,EAAe,mCAAG,WAAMC,GAAN,2FACRX,EAASI,IAAT,8BAAoCO,EAApC,YAA6CZ,IADrC,cACvBM,EADuB,OAErBC,EAASD,EAATC,KACAC,EAAYD,EAAZC,QAHqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAQ,mCAAG,WAAMH,GAAN,2FACDT,EAASI,IAAT,iBAAuBK,EAAvB,oBAAqCV,IADpC,cAChBM,EADgB,OAEdC,EAASD,EAATC,KACAO,EAASP,EAATO,KAHc,kBAIfA,GAJe,2CAAH,sDAORC,EAAU,mCAAG,WAAML,GAAN,2FACHT,EAASI,IAAT,iBAAuBK,EAAvB,oBAAqCV,EAArC,YADG,cAClBM,EADkB,OAEhBC,EAASD,EAATC,KACAC,EAAYD,EAAZC,QAHgB,kBAIjBA,GAJiB,2CAAH,qD,wJC/BR,SAASQ,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,CACjCC,KAAM,GACNC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQZ,GAAOa,EAAAA,EAAAA,MAAPb,IAERc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBH,GAAS,kBACJD,GADG,IAENF,SAAS,KAHO,mBAMKJ,EAAAA,EAAAA,IAAWL,GANhB,OAMVJ,EANU,OAQhBoB,QAAQC,IAAIrB,GACZgB,GAAS,SAAAM,GACP,OAAO,kBACFA,GADL,IAEEV,KAAMZ,GAET,IAde,gDAgBhBgB,GAAS,kBACJD,GADG,IAEND,MAAK,QAlBS,yBAqBhBE,GAAS,SAAAM,GACP,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,GACjC,IAvBe,4EAAH,qDA0BjBM,GAED,GAAE,CAACf,IAGJ,IAAQQ,EAASG,EAATH,KAER,OADAQ,QAAQC,IAAIT,IAEV,8BACGA,GAAQA,EAAKW,OAAS,GACrB,wBACGX,EAAKY,KAAI,SAAAC,GACR,IAAQrB,EAAwBqB,EAAxBrB,GAAIsB,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QACpB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGvB,EAKZ,OAGH,qEAIP,C","sources":["Service/servise.js","components/Pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst myKey = 'api_key=3ad61d03a4fee35a02b0181321c49002';\nconst trendMovies = '/trending/movie/day?';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getMovies = async () => {\n  const result = await instance.get(`${trendMovies}${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getSingleMovie = async id => {\n  const result = await instance.get(`/movie/${id}?${myKey}`);\n  const { data } = result;\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const result = await instance.get(`/search/movie?query=${query}&${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getActor = async id => {\n  const result = await instance.get(`/movie/${id}/credits?${myKey}`);\n  const { data } = result;\n  const { cast } = data;\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const result = await instance.get(`/movie/${id}/reviews?${myKey}&page=1`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'Service/servise';\n\nexport default function ReviewsPage() {\n  const [state, setState] = useState({\n    item: [],\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setState({\n        ...state,\n        loading: true,\n      });\n      try {\n        const result = await getReviews(id);\n\n        console.log(result);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          };\n        });\n      } catch (error) {\n        setState({\n          ...state,\n          error,\n        });\n      } finally {\n        setState(prevState => {\n          return { ...prevState, loading: false };\n        });\n      }\n    };\n    fetchMovies();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  // console.log(id)\n  // const { title, overview, genres, poster_path, vote_average } = state.item;\n  const { item } = state;\n  console.log(item);\n  return (\n    <>\n      {item && item.length > 0 ? (\n        <ul>\n          {item.map(el => {\n            const { id, author, content } = el;\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["myKey","instance","axios","baseURL","getMovies","get","result","data","results","getSingleMovie","id","getSearchMovies","query","getActor","cast","getReviews","ReviewsPage","useState","item","loading","error","state","setState","useParams","useEffect","fetchMovies","console","log","prevState","length","map","el","author","content"],"sourceRoot":""}