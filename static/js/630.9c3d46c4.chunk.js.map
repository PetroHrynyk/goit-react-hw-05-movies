{"version":3,"file":"static/js/630.9c3d46c4.chunk.js","mappings":"8SACMA,EAAQ,2CAGRC,EAAWC,EAAAA,GAAAA,OAAa,CAC5BC,QAAS,iCAGEC,EAAS,mCAAG,wGACFH,EAASI,IAAT,UAPH,wBAOG,OAA8BL,IAD5B,cACjBM,EADiB,OAEfC,EAASD,EAATC,KACAC,EAAYD,EAAZC,QAHe,kBAIhBA,GAJgB,2CAAH,qDAOTC,EAAc,mCAAG,WAAMC,GAAN,yFACPT,EAASI,IAAT,iBAAuBK,EAAvB,YAA6BV,IADtB,cACtBM,EADsB,OAEpBC,EAASD,EAATC,KAFoB,kBAGrBA,GAHqB,2CAAH,sDAMdI,EAAe,mCAAG,WAAMC,GAAN,2FACRX,EAASI,IAAT,8BAAoCO,EAApC,YAA6CZ,IADrC,cACvBM,EADuB,OAErBC,EAASD,EAATC,KACAC,EAAYD,EAAZC,QAHqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAQ,mCAAG,WAAMH,GAAN,2FACDT,EAASI,IAAT,iBAAuBK,EAAvB,oBAAqCV,IADpC,cAChBM,EADgB,OAEdC,EAASD,EAATC,KACAO,EAASP,EAATO,KAHc,kBAIfA,GAJe,2CAAH,sDAORC,EAAU,mCAAG,WAAML,GAAN,2FACHT,EAASI,IAAT,iBAAuBK,EAAvB,oBAAqCV,EAArC,YADG,cAClBM,EADkB,OAEhBC,EAASD,EAATC,KACAC,EAAYD,EAAZC,QAHgB,kBAIjBA,GAJiB,2CAAH,qD,+IClCvB,EAAsB,sB,SCOP,SAASQ,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,CACjCC,KAAM,GACNC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQZ,GAAOa,EAAAA,EAAAA,MAAPb,IAGRc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBH,GAAS,kBACJD,GADG,IAENF,SAAS,KAHO,mBAMKN,EAAAA,EAAAA,IAASH,GANd,OAMVJ,EANU,OAShBgB,GAAS,SAAAI,GACP,OAAO,kBACFA,GADL,IAEER,KAAMZ,GAET,IAde,gDAgBhBgB,GAAS,kBACJD,GADG,IAEND,MAAK,QAlBS,yBAqBhBE,GAAS,SAAAI,GACP,OAAO,kBAAKA,GAAZ,IAAuBP,SAAS,GACjC,IAvBe,4EAAH,qDA0BjBQ,QAAQC,IAAIP,EAAMH,MAClBO,GAED,GAAE,CAACf,IAEJ,IAAQQ,EAASG,EAATH,KAER,OADAS,QAAQC,IAAIV,IAEV,wBACGA,EAAKW,OAAS,GACbX,EAAKY,KAAI,SAAAC,GACP,IAAQrB,EAA+CqB,EAA/CrB,GAAIsB,EAA2CD,EAA3CC,aAAcC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UACzC,OACE,2BACE,gBACEC,UAAWC,EACXC,IACmB,OAAjBL,EAAA,UAzDO,uCAyDP,OAC0BA,GAxD1C,kFA2DcM,IAAKL,KAEP,uBAAIA,KACJ,wCAAgBC,OAXTxB,EAcZ,KAGR,C","sources":["Service/servise.js","webpack://goit-react-hw-05-movies/./src/components/Pages/CastPage/CastPage.module.css?b437","components/Pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst myKey = 'api_key=3ad61d03a4fee35a02b0181321c49002';\nconst trendMovies = '/trending/movie/day?';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getMovies = async () => {\n  const result = await instance.get(`${trendMovies}${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getSingleMovie = async id => {\n  const result = await instance.get(`/movie/${id}?${myKey}`);\n  const { data } = result;\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const result = await instance.get(`/search/movie?query=${query}&${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getActor = async id => {\n  const result = await instance.get(`/movie/${id}/credits?${myKey}`);\n  const { data } = result;\n  const { cast } = data;\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const result = await instance.get(`/movie/${id}/reviews?${myKey}&page=1`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"CastPage_img__bOvWe\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getActor } from 'Service/servise';\nimport s from './CastPage.module.css';\nconst BASE_URL_PICTURE = 'https://image.tmdb.org/t/p/original';\nconst DEFAULT_FOTO =\n  'https://vyshnevyi-partners.com/wp-content/uploads/2016/12/no-avatar-300x300.png';\n\nexport default function CastPage() {\n  const [state, setState] = useState({\n    item: [],\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n \n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setState({\n        ...state,\n        loading: true,\n      });\n      try {\n        const result = await getActor(id);\n\n        // console.log(result)\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          };\n        });\n      } catch (error) {\n        setState({\n          ...state,\n          error,\n        });\n      } finally {\n        setState(prevState => {\n          return { ...prevState, loading: false };\n        });\n      }\n    };\n    console.log(state.item);\n    fetchMovies();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  const { item } = state;\n  console.log(item);\n  return (\n    <ul>\n      {item.length > 0 &&\n        item.map(el => {\n          const { id, profile_path, original_name, character } = el;\n          return (\n            <li key={id}>\n              <img\n                className={s.img}\n                src={\n                  profile_path !== null\n                    ? `${BASE_URL_PICTURE}${profile_path}`\n                    : DEFAULT_FOTO\n                }\n                alt={original_name}\n              />\n              <p>{original_name}</p>\n              <p> Character: {character}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n"],"names":["myKey","instance","axios","baseURL","getMovies","get","result","data","results","getSingleMovie","id","getSearchMovies","query","getActor","cast","getReviews","CastPage","useState","item","loading","error","state","setState","useParams","useEffect","fetchMovies","prevState","console","log","length","map","el","profile_path","original_name","character","className","s","src","alt"],"sourceRoot":""}