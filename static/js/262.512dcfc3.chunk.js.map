{"version":3,"file":"static/js/262.512dcfc3.chunk.js","mappings":"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","sources":["Service/servise.js","components/Modules/AllMoviesList/AllMoviesList.jsx","components/Modules/MovieSearchForm/MovieSearchForm.jsx","components/Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst myKey = 'api_key=3ad61d03a4fee35a02b0181321c49002';\nconst trendMovies = '/trending/movie/day?';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getMovies = async () => {\n  const result = await instance.get(`${trendMovies}${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getSingleMovie = async id => {\n  const result = await instance.get(`/movie/${id}?${myKey}`);\n  const { data } = result;\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const result = await instance.get(`/search/movie?query=${query}&${myKey}`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n\nexport const getActor = async id => {\n  const result = await instance.get(`/movie/${id}/credits?${myKey}`);\n  const { data } = result;\n  const { cast } = data;\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const result = await instance.get(`/movie/${id}/reviews?${myKey}&page=1`);\n  const { data } = result;\n  const { results } = data;\n  return results;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport default function AllMoviesList({ items }) {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  ));\n  return <ol>{elements}</ol>;\n}\n\nAllMoviesList.defaultProps = {\n  items: [],\n};\n","import { useState } from 'react';\n\nexport default function MovieSearchForm({ onSubmit }) {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({\n      search: '',\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        name=\"search\"\n        value={state.search}\n        onChange={handleChange}\n        required\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'Service/servise';\nimport MovieSearchForm from 'components/Modules/MovieSearchForm/MovieSearchForm';\nimport AllMoviesList from 'components/Modules/AllMoviesList/AllMoviesList';\nexport default function MovieSearchPage() {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setState({\n        ...state,\n        loading: true,\n      });\n      try {\n        const result = await getSearchMovies(search);\n        console.log(result);\n        setState(prevState => ({\n          ...prevState,\n          items: result,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return { ...prevState, loading: false };\n        });\n      }\n    };\n    if (search) {\n      fetchMovies();\n    }\n  }, );\n\n  const changeSearch = ({ search }) => {\n    setSearchParams({ search });\n  };\n  const { items, loading, error } = state;\n  console.log(items);\n  return (\n    <>\n      <MovieSearchForm onSubmit={changeSearch} />\n      {items.length > 0 && <AllMoviesList items={items} />}\n      {loading && <p>...Load trend movies</p>}\n      {error && <p>...Loading failed</p>}\n    </>\n  );\n} "],"names":["myKey","instance","axios","baseURL","getMovies","get","result","data","results","getSingleMovie","id","getSearchMovies","query","getActor","cast","getReviews","AllMoviesList","items","location","useLocation","elements","map","title","state","from","to","defaultProps","MovieSearchForm","onSubmit","useState","search","setState","e","preventDefault","name","value","onChange","target","required","type","MovieSearchPage","loading","error","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovies","console","log","prevState","length"],"sourceRoot":""}